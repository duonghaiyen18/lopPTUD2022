<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>